services:
  app:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.local
    command:
      - sh
      - -c
      - |
        # Wait for ngrok to be ready
        until curl -s --fail http://ngrok:4040/api/tunnels > /dev/null; do
          echo "Waiting for ngrok..."
          sleep 2
        done

        curl -s -o /tmp/ngrok_response.json http://ngrok:4040/api/tunnels

        # Get the ngrok URL
        NGROK_URL=$(cat /tmp/ngrok_response.json | jq -r '.tunnels[0].public_url')
        NAME=jatin
        echo "ngrok URL: $NGROK_URL"
        echo "ANd name is: $NAME"

        # Set the environment variable in .env file
        echo "HOST=$(cat /tmp/ngrok_response.json | jq -r '.tunnels[0].public_url')" > /app/.env

        npm run dev:docker
    volumes:
      - ./src/generated:/app/src/generated
      - ./src:/app/src/
      - ./public:/app/public/
      - ./prisma:/app/prisma
    ports:
      - 3000:3000
    environment:
      - DATABASE_URL=postgresql://admin:admin@db:5432/app

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    environment:
      - NGROK_AUTHTOKEN=2x2YKT4CZEbmet1jFtk3oHmcHwD_6dQ9MxHY1NrMQoa7bfiz9
    ports:
      - 4040:4040
    command:
      - http
      - "app:3000"

  db:
    image: postgres
    restart: always
    shm_size: 128mb

    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: app

    volumes:
      - db_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 3s

volumes:
  db_data:
